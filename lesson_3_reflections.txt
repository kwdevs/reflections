When would you want to use a remote repository rather than keeping all your work
local?

    Keeping all your work local only allows yourself access to the project.  By using a remote, you can access your project from anywhere and collaboration becomes effortless.

Why might you want to always pull changes manually rather than having Git
automatically stay up-to-date with your remote repository?

    Pulling automatically could introduce changes in code you are not prepared for.

Describe the differences between forks, clones, and branches.  When would you
use one instead of another?

    A fork is a clone of another developers repo on github.  A clone is a fork, but can also be a copy of a repo on a local machine or anywhere elese a copy can be stored.
    A branch is part of the commit history.  You would use a fork to clone a repo from one GitHub repo to your own.  You would use clone to save a copy of a repo on your local machine.  You would use a branch when developing a new feature or testing something that has no value being in production ready code.

What is the benefit of having a copy of the last known state of the remote
stored locally?

    You are more organized when collaborating and can proceed on a project offline.

How would you collaborate without using Git or GitHub?  What would be easier,
and what would be harder?

    It seems for small projects agreeing to a directory structure with backups would make sense.  However, introducing new members to the team or working on large projects make this idea seem to get out of hand quickly.  Also you lose the ability to collaborate with people you otherwise would never have met.  So far, it seems that GitHub is the easiest of the options, however, the learning curve for a new person interested in web dev is quite steep.

When would you want to make changes in a separate branch rather than directly in
master?  What benefits does each approach have?

You want to make changes in a seperate branch whenever the code you are working on is not production ready.  Adding or testing new features on a project or contributing a change to a project are all examples of when a new branch would be useful.  The main benefits of creating a new branch for changes are allowing your production ready code to stay untouched while new things are developed as well as organization of changes.  Changing things directly on master on the other hand is simpler.

When would you want to use a remote repository rather than keeping all your work
local?

    Keeping all your work local only allows yourself access to the project.  By using a remote, you can access your project from anywhere and collaboration becomes effortless.

Why might you want to always pull changes manually rather than having Git
automatically stay up-to-date with your remote repository?

    Fill in your answer here

Describe the differences between forks, clones, and branches.  When would you
use one instead of another?

    Fill in your answer here

What is the benefit of having a copy of the last known state of the remote
stored locally?

    Fill in your answer here

How would you collaborate without using Git or GitHub?  What would be easier,
and what would be harder?

    Fill in your answer here

When would you want to make changes in a separate branch rather than directly in
master?  What benefits does each approach have?

When would you want to use a remote repository rather than keeping all your work
local?

    Keeping all your work local only allows yourself access to the project.  By using a remote, you can access your project from anywhere and collaboration becomes effortless.

Why might you want to always pull changes manually rather than having Git
automatically stay up-to-date with your remote repository?

    Fill in your answer here

Describe the differences between forks, clones, and branches.  When would you
use one instead of another?

    Fill in your answer here

What is the benefit of having a copy of the last known state of the remote
stored locally?

    Fill in your answer here

How would you collaborate without using Git or GitHub?  What would be easier,
and what would be harder?

    Fill in your answer here

When would you want to make changes in a separate branch rather than directly in
master?  What benefits does each approach have?

    Fill in your answer here
